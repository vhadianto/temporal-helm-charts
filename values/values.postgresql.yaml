server:

  config:
    tls:
      certDir: /etc/temporal/config/certs

    persistence:
      default:
        driver: "sql"

        sql:
          driver: "postgres"
          host: _HOST_
          port: 5432
          database: temporal
          user: _USERNAME_
          password: _PASSWORD_
          # for a production deployment use this instead of `password` and provision the secret beforehand e.g. with a sealed secret
          # it has a single key called `password`
          # existingSecret: temporal-default-store
          maxConns: 20
          maxConnLifetime: "1h"
          # tls:
          #  enabled: true
          #  enableHostVerification: true
          #  serverName: _HOST_ # this is strictly required when using serverless CRDB offerings

      visibility:
        driver: "sql"

        sql:
          driver: "postgres"
          host: _HOST_
          port: 5432
          database: temporal_visibility
          user: _USERNAME_
          password: _PASSWORD_
          # for a production deployment use this instead of `password` and provision the secret beforehand e.g. with a sealed secret
          # it has a single key called `password`
          # existingSecret: temporal-visibility-store
          maxConns: 20
          maxConnLifetime: "1h"
          # tls:
          #  enabled: true
          #  enableHostVerification: true
          #  serverName: _HOST_ # this is strictly required when using serverless CRDB offerings

  resources:
    requests:
      cpu: 100m
      memory: 128Mi
      
  frontend:
    replicaCount: 1

  worker:
    replicaCount: 1

cassandra:
  enabled: false

mysql:
  enabled: false

postgresql:
  enabled: true

prometheus:
  enabled: true

grafana:
  enabled: true
  
elasticsearch:
  enabled: true

schema:
  setup:
    enabled: false
  update:
    enabled: false
